{"version":3,"sources":["Header.js","context/AppReducer.js","context/GlobalState.js","Balance.js","IncomeExpenses.js","Transaction.js","TransactionList.js","AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","reducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","amounts","useContext","map","amount","console","log","total","reduce","acc","item","toFixed","IncomeExpenses","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newtransaction","floor","random","for","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91917708.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n             <h2>Expense Tracker</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","  export const reducer= (state , action)=>{\r\n  \r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction=>transaction.id !==action.payload)\r\n                \r\n            }\r\n            case 'ADD_TRANSACTION':\r\n                return{\r\n                    ...state,\r\n                    transactions:\r\n                    [action.payload,...state.transactions] \r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React,{createContext , useReducer} from 'react';\r\nimport {reducer} from './AppReducer';\r\n\r\n// Initial State\r\nconst initialState ={\r\n    transactions :[]\r\n}\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({children}) =>{\r\n const [state, dispatch ] = useReducer(reducer , initialState);\r\n\r\n// Actions\r\n// Delete transactions\r\nfunction  deleteTransaction(id) \r\n{\r\n    dispatch({\r\n        type:'DELETE_TRANSACTION',\r\n        payload:id\r\n    })\r\n}\r\n\r\n// Add Transactions\r\nfunction addTransaction(transaction) {\r\n    dispatch({\r\n        type:'ADD_TRANSACTION',\r\n        payload:transaction\r\n    })\r\n    \r\n    \r\n}\r\n \r\n\r\n return    <GlobalContext.Provider value={{\r\n      transactions:state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n    \r\n        {children}\r\n    \r\n    </GlobalContext.Provider>\r\n }\r\n \r\n\r\n \r\n //Provider\r\n","import React,{useContext} from 'react'\r\nimport { GlobalContext } from './context/GlobalState'\r\n\r\n\r\n const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction=>transaction.amount);\r\n    console.log(amounts)\r\n\r\n    const total = amounts.reduce((acc,item)=>(acc +=item),0).toFixed(2)\r\n    // console.log(total)\r\n    \r\n\r\n    return (\r\n        <div>\r\n             <h4>Your Balance</h4>\r\n             <h1>RS:{total}</h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Balance;","import React,{useContext} from 'react'\r\nimport {GlobalContext} from './context/GlobalState'\r\n\r\n const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction=>transaction.amount);\r\n\r\n    const income = amounts.filter(item=>item>0)\r\n    .reduce((acc,item)=>(acc+=item),0)\r\n    .toFixed(2);\r\n\r\n    const expense =(\r\n        amounts.filter(item=>item<0).reduce((acc ,item)=>(acc+=item),0)*-1\r\n\r\n    ).toFixed(2)\r\n    return (\r\n       \r\n            <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className=\"money plus\">{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p  className=\"money minus\">{expense}</p>\r\n        </div>\r\n      </div>\r\n            \r\n        \r\n    )\r\n}\r\nexport default IncomeExpenses","import React,{useContext} from 'react';\r\nimport {GlobalContext} from './context/GlobalState'\r\n\r\nconst Transaction = ({transaction}) => {\r\nconst {deleteTransaction} =useContext(GlobalContext)\r\n    const sign =transaction.amount<0 ?'-' : '+';\r\n    return (\r\n\r\n        <div>\r\n            <li className={transaction.amount < 0 ? 'minus':'plus'}>\r\n                {transaction.text} <span>{sign}RS:{Math.abs(transaction.amount)}</span>\r\n                <button className=\"delete-btn\" onClick={()=>deleteTransaction(transaction.id)}>x</button>\r\n            </li>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from './context/GlobalState';\r\nimport Transaction from './Transaction';\r\n\r\nconst TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    console.log(transactions)\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => ( <Transaction  key={transaction.id} transaction={transaction}/> ))}\r\n\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, { useState,useContext } from 'react';\r\nimport {GlobalContext} from './context/GlobalState';\r\n\r\nconst AddTransaction = () => {\r\n\r\n    const[text , setText ] = useState('');\r\n    const[amount , setAmount ] = useState(0);\r\n    \r\n    const{addTransaction} = useContext(GlobalContext);\r\n\r\n    const onsubmit = (e)=>{\r\n        e.preventDefault()\r\n       setText('')\r\n       setAmount('')\r\n        \r\n        \r\n\r\n        const newtransaction={\r\n            id:Math.floor(Math.random()*10000000),\r\n            text,\r\n            amount:+amount,\r\n           \r\n        }\r\n        addTransaction(newtransaction);\r\n        \r\n        \r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onsubmit}>\r\n                <div className=\"form-control\">\r\n                    <label for=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e)=>setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label for=\"amount\"\r\n                    >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e)=>setAmount(e.target.value) }  placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React from 'react';\nimport Header from './Header';\nimport Balance from './Balance';\nimport IncomeExpenses from './IncomeExpenses'\nimport TransactionList from './TransactionList';\nimport AddTransaction from './AddTransaction';\nimport {GlobalProvider} from './context/GlobalState'\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header/>\n      <div className=\"container\">\n        <Balance/>\n        <IncomeExpenses/>\n        <TransactionList/>\n        <AddTransaction/>\n      </div>\n\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}